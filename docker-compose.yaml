version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: src/API/Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    volumes:
      - ./src/API:/app
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - REDIS_URL=http://redis:6379
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB} # Исправлено на database

  database:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: [ "postgres", "-c", "shared_preload_libraries=pg_trgm" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 1s
      timeout: 120s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis-service
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./src/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
      - bot

volumes:
  db_data:
